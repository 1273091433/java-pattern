package com.ikaimen.pattern.ProxyPattern.demo4;

/**
 * Created by ChenTao on 2017/7/15.
 *
 * 代理模式
 * 定义：
 * 为其他对象提供一种代理以控制对这个对象的访问
 *
 * 代理模式的优缺点：
 *
 * 1，职责清晰
 * 真实的角色就是现实实际的业务逻辑，不用关心其他非本职责的事物，通过后期的代理完成一件事务，附带的结果就是变成简洁清晰。
 * 2，高扩展性
 * 具体主题角色是随时都会发生变化的，只要他实现了接口，不管他如何变化，都逃不脱如来佛祖的手掌（接口），那么我们的代理类完全就可以在不做任何修改的情况下使用。
 * 3，智能化
 * 这在我们以上的讲解中还没有具体体现出来，不过在我们以下的动态代理章节中你就会看到代理的智能化有兴趣的读者可以看看Struts是如何把表单元素映射到对象上的。
 *
 * 代理模式的使用场景：
 * 我相信第一次接触到代理模式的读者肯定很郁闷，为什么要用代理呢？想想现实世界吧，打官司为什么要找个律师呢？因为你不想参与其中过程的是是非非，只要完成自己的答辩就成，
 * 其他的比如事前调查，时候追查都由律师来搞定，这就是为了减轻你的负担。代理模式的使用场景非常多，大家可以看看Spring AOP ,这是一个非常典型的动态代理。
 *
 */
public interface Subject {

    //实现方法
    public void request();


}
